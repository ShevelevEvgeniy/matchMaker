// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	context "context"
	dto "matchMaker/internal/dto"

	mock "github.com/stretchr/testify/mock"
)

// Events is an autogenerated mock type for the Events type
type Events struct {
	mock.Mock
}

// Handle provides a mock function with given fields: ctx, group
func (_m *Events) Handle(ctx context.Context, group dto.Group) {
	_m.Called(ctx, group)
}

// NewEvents creates a new instance of Events. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEvents(t interface {
	mock.TestingT
	Cleanup(func())
}) *Events {
	mock := &Events{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
